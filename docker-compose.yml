services:
  # Minha Aplicação
  db:
    image: postgres:16-alpine
    container_name: rinha-db
    hostname: rinha-db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    volumes:
      - ./init-rinha-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rinha-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d rinha"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: rinha-redis
    hostname: rinha-redis
    networks:
      - rinha-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  api1: &api
    build: .
    hostname: api1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "95MB"
    networks:
      - rinha-net
      - payment-processor
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3000"]
      interval: 10s
      timeout: 5s
      retries: 3

  api2:
    <<: *api
    hostname: api2

  load-balancer:
    image: nginx:1.25.5-alpine
    container_name: rinha-load-balancer
    hostname: rinha-load-balancer
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api1:
        condition: service_healthy
      api2:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "9999:9999"
    networks:
      - rinha-net

networks:
  rinha-net:
    driver: bridge
  payment-processor:
    external: true

